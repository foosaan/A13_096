package com.example.loket.ui.viewModel.peserta

import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.setValue
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.example.projectakhirpam_a13.model.Peserta
import com.example.projectakhirpam_a13.repository.PesertaRepository
import kotlinx.coroutines.launch


class PesertaInsertViewModel(private val pesertaRepository: PesertaRepository) : ViewModel() {
    var uiState by mutableStateOf(PesertaInsertUiState())
        private set

    fun PesertaUpdateInsertState(insertUiEvent: PesertaInsertUiEvent) {
        uiState = PesertaInsertUiState(insertUiEvent = insertUiEvent)
    }

    fun insertPeserta() {
        viewModelScope.launch {
            try {
                pesertaRepository.insertPeserta(uiState.insertUiEvent.toPeserta())
            } catch (e: Exception) {
                e.printStackTrace()
            }
        }
    }
}

data class PesertaInsertUiState(
    val insertUiEvent: PesertaInsertUiEvent = PesertaInsertUiEvent()
)


data class PesertaInsertUiEvent(
    val idPeserta: Int = 0, // Default to 0, since ID may be auto-generated by the server
    val namaPeserta: String = "",
    val emailPeserta: String = "",
    val nomorTelepon: String = ""
)

fun PesertaInsertUiEvent.toPeserta(): Peserta = Peserta(
    id_peserta = idPeserta,
    nama_peserta = namaPeserta,
    email = emailPeserta,
    nomor_telepon = nomorTelepon
)

fun Peserta.toUiStatePasien(): PesertaInsertUiState = PesertaInsertUiState(
    insertUiEvent = toInsertUiEvent()
)

fun Peserta.toInsertUiEvent(): PesertaInsertUiEvent = PesertaInsertUiEvent(
    idPeserta = id_peserta,
    namaPeserta = nama_peserta,
    emailPeserta = email,
    nomorTelepon = nomor_telepon
)